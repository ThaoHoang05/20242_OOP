Reading Assignment:  Please answer three questions below:
            What are the advantages of Polymorphism?
            How is Inheritance useful to achieve Polymorphism in Java?
            What are the differences between Polymorphism and Inheritance in Java?
 Trả lời:
 Đa hình mang lại nhiều lợi ích trong lập trình hướng đối tượng:
         Tính linh hoạt: Cho phép viết code linh hoạt hơn, xử lý nhiều loại đối tượng khác nhau thông qua một giao diện chung.
         Khả năng tái sử dụng mã nguồn: Đa hình giúp viết code có thể tái sử dụng với nhiều loại đối tượng khác nhau.
         Dễ dàng mở rộng: Có thể thêm các lớp mới triển khai cùng một giao diện mà không cần thay đổi code hiện có.
         Đơn giản hóa code: Thay vì viết nhiều điều kiện kiểm tra loại đối tượng, đa hình cho phép xử lý đúng loại đối tượng một cách tự động.
         Hỗ trợ nguyên tắc thiết kế lập trình cho giao diện, không phải triển khai: Giúp thiết kế hệ thống linh hoạt hơn.


Kế thừa hỗ trợ đa hình trong Java theo những cách sau:
            Ghi đè phương thức (Method Overriding): Kế thừa cho phép lớp con ghi đè các phương thức từ lớp cha, đây là nền tảng của đa hình thời gian chạy (runtime polymorphism).

            Tham chiếu kiểu lớp cha tới đối tượng lớp con: Java cho phép biến tham chiếu kiểu lớp cha có thể trỏ đến đối tượng của lớp con.

            Phân cấp lớp: Kế thừa tạo ra hệ thống phân cấp lớp, cho phép nhiều lớp con khác nhau triển khai cùng một hành vi theo cách riêng.

            Triển khai interface: Trong Java, các lớp có thể triển khai nhiều interface, đây cũng là một hình thức kế thừa hỗ trợ đa hình.
 Đa hình và Kế thừa có những khác biệt cơ bản sau:

 Định nghĩa:

     Đa hình: Là khả năng xử lý các đối tượng khác nhau thông qua cùng một giao diện.
     Kế thừa: Là khả năng lớp con kế thừa thuộc tính và phương thức từ lớp cha.


 Mục đích:

     Đa hình: Tập trung vào cách các đối tượng phản ứng khác nhau với cùng một thông điệp.
     Kế thừa: Tập trung vào việc tái sử dụng code và xây dựng mối quan hệ "is-a" giữa các lớp.


 Cách thức triển khai:

     Đa hình: Có thể đạt được thông qua ghi đè phương thức, nạp chồng phương thức, hoặc sử dụng interface.
     Kế thừa: Đạt được thông qua từ khóa "extends" (đối với lớp) và "implements" (đối với interface).


 Quan hệ:

     Đa hình là một khái niệm, một tính năng của lập trình hướng đối tượng.
     Kế thừa là một cơ chế để đạt được đa hình (bên cạnh các cơ chế khác).


 Loại:

     Đa hình có hai loại chính: đa hình thời gian biên dịch (nạp chồng phương thức) và đa hình thời gian chạy (ghi đè phương thức).
     Kế thừa có nhiều dạng: kế thừa đơn, kế thừa đa cấp, kế thừa thứ bậc (Java không hỗ trợ đa kế thừa đối với lớp).